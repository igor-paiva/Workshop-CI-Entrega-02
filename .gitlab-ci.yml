stages:
    - deploy
    - test
    - build

frontend-test:
    image: node:latest
    stage: test
    before_script:
        - cd frontend
        - yarn
    script:
        - yarn test

backend-test:
    image: node:latest
    stage: test
    before_script:
        - cd backend
        - npm install
    script:
        - npm run unittest

frontend-build:
    image: node:latest
    stage: build
    before_script:
        - cd frontend
        - npm install
    script:
        - npm run build
    only:
        - /^main$/

backend-build:
    image: node:latest
    stage: build
    before_script:
        - cd backend
        - npm install
    script:
        - npm run build
    only:
        - /^main$/

frontend-deploy:
    image: docker:stable
    stage: deploy
    services:
        - docker:19.03.12-dind
    before_script:
        - cd frontend
        - docker info
        - docker login -u $DOCKER_ID -p $DOCKER_TOKEN
    script:
        - docker build -t $DOCKER_ID/$DOCKER_FRONTEND_REPO .
        - docker push $DOCKER_ID/$DOCKER_FRONTEND_REPO
    after_script:
        - docker logout
    only:
        - /^main$/

backend-deploy:
    image: docker:stable
    stage: deploy
    services:
        - docker:19.03.12-dind
    before_script:
        - cd backend
        - docker info
        - docker login -u $DOCKER_ID -p $DOCKER_TOKEN
    script:
        - docker build -t $DOCKER_ID/$DOCKER_BACKEND_REPO .
        - docker push $DOCKER_ID/$DOCKER_BACKEND_REPO
    after_script:
        - docker logout
    only:
        - /^main$/
